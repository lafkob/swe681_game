/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'ben' at '1/28/16 10:34 PM' with Gradle 2.10
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.10/userguide/tutorial_java_projects.html
 */

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'war'


// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
	// double check these are all needed
	compile 'org.springframework:spring-core:4.2.4.RELEASE'
	compile 'org.springframework:spring-webmvc:4.2.4.RELEASE'
	compile 'org.springframework.security:spring-security-web:4.0.4.RELEASE'
	compile 'org.springframework.security:spring-security-config:4.0.4.RELEASE'
	providedCompile 'javax.servlet:javax.servlet-api:3.1.0'

    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.13'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
